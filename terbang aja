local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FlyGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui
screenGui.Enabled = true

-- Create main frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 320, 0, 220)
mainFrame.Position = UDim2.new(0.5, -160, 0.5, -110)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true -- needed for dragging
mainFrame.Draggable = true
mainFrame.Parent = screenGui

-- Title bar (for dragging and to host buttons)
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

-- Title label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -80, 1, 0)
titleLabel.Position = UDim2.new(0, 5, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Fly GUI"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 24
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 40, 1, 0)
closeButton.Position = UDim2.new(1, -40, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.BorderSizePixel = 0
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 24
closeButton.Parent = titleBar

-- Minimize button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 40, 1, 0)
minimizeButton.Position = UDim2.new(1, -80, 0, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
minimizeButton.BorderSizePixel = 0
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextSize = 32
minimizeButton.Parent = titleBar

-- Content frame (holds buttons etc.)
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, 0, 1, -40)
contentFrame.Position = UDim2.new(0, 0, 0, 40)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

-- Fly toggle button
local flyToggle = Instance.new("TextButton")
flyToggle.Size = UDim2.new(0, 280, 0, 50)
flyToggle.Position = UDim2.new(0, 20, 0, 10)
flyToggle.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
flyToggle.BorderSizePixel = 0
flyToggle.Text = "Fly: OFF"
flyToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
flyToggle.Font = Enum.Font.SourceSans
flyToggle.TextSize = 22
flyToggle.Parent = contentFrame

-- Fly speed label
local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(0, 120, 0, 25)
speedLabel.Position = UDim2.new(0, 20, 0, 75)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "Fly Speed: 50"
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.Font = Enum.Font.SourceSans
speedLabel.TextSize = 20
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Parent = contentFrame

-- Fly speed slider background
local sliderBg = Instance.new("Frame")
sliderBg.Size = UDim2.new(0, 280, 0, 20)
sliderBg.Position = UDim2.new(0, 20, 0, 105)
sliderBg.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
sliderBg.BorderSizePixel = 0
sliderBg.Parent = contentFrame

-- Fly speed slider fill
local sliderFill = Instance.new("Frame")
sliderFill.Size = UDim2.new(0.5, 0, 1, 0) -- start at half (0.5)
sliderFill.BackgroundColor3 = Color3.fromRGB(100, 180, 255)
sliderFill.BorderSizePixel = 0
sliderFill.Parent = sliderBg

-- Slider draggable button
local sliderButton = Instance.new("TextButton")
sliderButton.Size = UDim2.new(0, 16, 1, 0)
sliderButton.Position = UDim2.new(sliderFill.Size.X.Scale, 0, 0, 0)
sliderButton.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
sliderButton.BorderSizePixel = 0
sliderButton.Text = ""
sliderButton.Parent = sliderBg

-- Variables for flying
local flying = false
local flySpeed = 50
local bodyVelocity, bodyGyro

local character
local hrp

local function startFlying()
    character = player.Character or player.CharacterAdded:Wait()
    hrp = character:WaitForChild("HumanoidRootPart")
    if not hrp then return end

    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
    bodyVelocity.Velocity = Vector3.new(0,0,0)
    bodyVelocity.P = 1e4
    bodyVelocity.Parent = hrp

    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(1e5,1e5,1e5)
    bodyGyro.P = 1e4
    bodyGyro.CFrame = hrp.CFrame
    bodyGyro.Parent = hrp
end

local function stopFlying()
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end
    if bodyGyro then
        bodyGyro:Destroy()
        bodyGyro = nil
    end
end

local function updateFlyVelocity()
    if not flying or not bodyVelocity or not bodyGyro or not hrp then return end
    local camera = workspace.CurrentCamera
    local camCF = camera.CFrame

    local direction = Vector3.new(0,0,0)
    if UserInputService:IsKeyDown(Enum.KeyCode.W) then direction += camCF.LookVector end
    if UserInputService:IsKeyDown(Enum.KeyCode.S) then direction -= camCF.LookVector end
    if UserInputService:IsKeyDown(Enum.KeyCode.A) then direction -= camCF.RightVector end
    if UserInputService:IsKeyDown(Enum.KeyCode.D) then direction += camCF.RightVector end
    if UserInputService:IsKeyDown(Enum.KeyCode.Space) then direction += Vector3.new(0,1,0) end
    if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then direction -= Vector3.new(0,1,0) end

    if direction.Magnitude > 0 then
        direction = direction.Unit
        bodyVelocity.Velocity = direction * flySpeed
        bodyGyro.CFrame = CFrame.new(hrp.Position, hrp.Position + camCF.LookVector)
    else
        bodyVelocity.Velocity = Vector3.new(0,0,0)
    end
end

-- Connect flying update to RenderStepped
RunService.RenderStepped:Connect(function()
    updateFlyVelocity()
end)

-- Fly toggle button functionality
flyToggle.MouseButton1Click:Connect(function()
    flying = not flying
    if flying then
        flyToggle.Text = "Fly: ON"
        startFlying()
    else
        flyToggle.Text = "Fly: OFF"
        stopFlying()
    end
end)

-- Slider dragging support
local dragging = false

local function clamp(n, lower, upper)
    if n < lower then return lower end
    if n > upper then return upper end
    return n
end

sliderButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
    end
end)

sliderButton.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mousePosX = input.Position.X
        local sliderPos = sliderBg.AbsolutePosition.X
        local sliderSize = sliderBg.AbsoluteSize.X
        local relativeX = clamp(mousePosX - sliderPos, 0, sliderSize)
        local scale = relativeX / sliderSize

        sliderFill.Size = UDim2.new(scale, 0, 1, 0)
        sliderButton.Position = UDim2.new(scale, -sliderButton.Size.X.Offset/2, 0, 0)

        -- Fly speed ranges from 10 to 150
        flySpeed = math.floor(10 + scale * (350 - 10))
        speedLabel.Text = "Fly Speed: "..flySpeed
    end
end)

-- Close button destroys GUI
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Minimize button toggles contentFrame visibility
local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        contentFrame.Visible = false
        mainFrame.Size = UDim2.new(0, 320, 0, 40)
        minimizeButton.Text = "+"
    else
        contentFrame.Visible = true
        mainFrame.Size = UDim2.new(0, 320, 0, 220)
        minimizeButton.Text = "-"
    end
end)

-- Toggle GUI visibility with RightShift
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.RightShift then
        screenGui.Enabled = not screenGui.Enabled
    end
end)

-- Cleanup flying on respawn
player.CharacterAdded:Connect(function(char)
    flying = false
    flyToggle.Text = "Fly: OFF"
    stopFlying()
end)
